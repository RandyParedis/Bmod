{
	"types": {
		"Behaviour": [
			{
				"name": "level",
				"type": "ENUM(Attentive,Relaxed,Optimistic,Sceptic)",
				"default": ""
			},
			{
				"name": "profile",
				"type": "ENUM(Newcomer,Experienced,Scared)",
				"default": ""
			}
		],
		"Occupant": [
			{
				"name": "notified",
				"type": "boolean",
				"default": false
			},
			{
				"name": "running",
				"type": "boolean",
				"default": false
			},
			{
				"name": "name",
				"type": "string",
				"default": ""
			},
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"A_behaviour": [],
		"Location": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"Cell": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"A_holds": [],
		"Room": [
			{
				"name": "name",
				"type": "string",
				"default": ""
			}
		],
		"A_cells": [],
		"Door": [
			{
				"name": "position",
				"type": "list<int>",
				"default": [
					0,
					0
				]
			}
		],
		"A_celldoor": [],
		"EmergencySign": [],
		"A_next": [],
		"A_sign": [],
		"A_bottom": [],
		"A_left": [],
		"A_top": [],
		"A_right": []
	},
	"constraints": [
		{
			"name": "noAbstractInstances",
			"event": "pre-create",
			"code": "false",
			"targetType": "Location"
		}
	],
	"actions": [
		{
			"name": "snapToTarget",
			"event": "post-connect",
			"code": "/*newline*/var neighborLinks = getNeighbors('>');/*newline*/var neighborLink = neighborLinks[neighborLinks.length-1];/*newline*/var occR = 35;/*newline*/var cellS = 90;/*newline*/var offset = (cellS - 2*occR) / 2;/*newline*/if( neighborLink ) {/*newline*/    if( getAttr('$type', neighborLink).match(/A_holds/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position');/*newline*/        setAttr('position', [npos[0] + offset, npos[1] + offset], neigh);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_bottom/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] + cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_top/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] - cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_left/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] - cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_right/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] + cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_celldoor/) ){/*newline*/        var door = getNeighbors('>','*',neighborLink)[0];/*newline*/        var celldoors = getNeighbors('<','*', door);/*newline*/        cells = [];/*newline*/        for(i in celldoors) {/*newline*/            var ta = getNeighbors('<', '*', celldoors[i])[0];/*newline*/            if(!(ta in cells)) { cells.push(ta); }/*newline*/        }/*newline*/        if(cells.length == 2) {/*newline*/            var cpos = [getAttr('position', cells[0]), getAttr('position', cells[1])];/*newline*/            var dpos = [Math.max(cpos[0][0], cpos[1][0]), Math.max(cpos[0][1], cpos[1][1])];/*newline*/            if(cpos[0][0] == cpos[1][0]) {/*newline*/                dpos[1] -= cellS;/*newline*/                dpos[0] -= cellS / 2;/*newline*/            } else if(cpos[0][1] == cpos[1][1]) {/*newline*/                dpos[0] -= cellS;/*newline*/                dpos[1] -= cellS / 2;/*newline*/            }/*newline*/            setAttr('position', dpos, door);/*newline*/        }/*newline*/    }/*newline*/}/*newline*/  ",
			"targetType": "Occupant"
		},
		{
			"name": "snapToTarget",
			"event": "post-connect",
			"code": "/*newline*/var neighborLinks = getNeighbors('>');/*newline*/var neighborLink = neighborLinks[neighborLinks.length-1];/*newline*/var occR = 35;/*newline*/var cellS = 90;/*newline*/var offset = (cellS - 2*occR) / 2;/*newline*/if( neighborLink ) {/*newline*/    if( getAttr('$type', neighborLink).match(/A_holds/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position');/*newline*/        setAttr('position', [npos[0] + offset, npos[1] + offset], neigh);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_bottom/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] + cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_top/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] - cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_left/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] - cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_right/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] + cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_celldoor/) ){/*newline*/        var door = getNeighbors('>','*',neighborLink)[0];/*newline*/        var celldoors = getNeighbors('<','*', door);/*newline*/        cells = [];/*newline*/        for(i in celldoors) {/*newline*/            var ta = getNeighbors('<', '*', celldoors[i])[0];/*newline*/            if(!(ta in cells)) { cells.push(ta); }/*newline*/        }/*newline*/        if(cells.length == 2) {/*newline*/            var cpos = [getAttr('position', cells[0]), getAttr('position', cells[1])];/*newline*/            var dpos = [Math.max(cpos[0][0], cpos[1][0]), Math.max(cpos[0][1], cpos[1][1])];/*newline*/            if(cpos[0][0] == cpos[1][0]) {/*newline*/                dpos[1] -= cellS;/*newline*/                dpos[0] -= cellS / 2;/*newline*/            } else if(cpos[0][1] == cpos[1][1]) {/*newline*/                dpos[0] -= cellS;/*newline*/                dpos[1] -= cellS / 2;/*newline*/            }/*newline*/            setAttr('position', dpos, door);/*newline*/        }/*newline*/    }/*newline*/}/*newline*/  ",
			"targetType": "Location"
		},
		{
			"name": "snapToTarget",
			"event": "post-connect",
			"code": "/*newline*/var neighborLinks = getNeighbors('>');/*newline*/var neighborLink = neighborLinks[neighborLinks.length-1];/*newline*/var occR = 35;/*newline*/var cellS = 90;/*newline*/var offset = (cellS - 2*occR) / 2;/*newline*/if( neighborLink ) {/*newline*/    if( getAttr('$type', neighborLink).match(/A_holds/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position');/*newline*/        setAttr('position', [npos[0] + offset, npos[1] + offset], neigh);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_bottom/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] + cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_top/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] - cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_left/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] - cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_right/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] + cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_celldoor/) ){/*newline*/        var door = getNeighbors('>','*',neighborLink)[0];/*newline*/        var celldoors = getNeighbors('<','*', door);/*newline*/        cells = [];/*newline*/        for(i in celldoors) {/*newline*/            var ta = getNeighbors('<', '*', celldoors[i])[0];/*newline*/            if(!(ta in cells)) { cells.push(ta); }/*newline*/        }/*newline*/        if(cells.length == 2) {/*newline*/            var cpos = [getAttr('position', cells[0]), getAttr('position', cells[1])];/*newline*/            var dpos = [Math.max(cpos[0][0], cpos[1][0]), Math.max(cpos[0][1], cpos[1][1])];/*newline*/            if(cpos[0][0] == cpos[1][0]) {/*newline*/                dpos[1] -= cellS;/*newline*/                dpos[0] -= cellS / 2;/*newline*/            } else if(cpos[0][1] == cpos[1][1]) {/*newline*/                dpos[0] -= cellS;/*newline*/                dpos[1] -= cellS / 2;/*newline*/            }/*newline*/            setAttr('position', dpos, door);/*newline*/        }/*newline*/    }/*newline*/}/*newline*/  ",
			"targetType": "Cell"
		},
		{
			"name": "snapToTarget",
			"event": "post-connect",
			"code": "/*newline*/var neighborLinks = getNeighbors('>');/*newline*/var neighborLink = neighborLinks[neighborLinks.length-1];/*newline*/var occR = 35;/*newline*/var cellS = 90;/*newline*/var offset = (cellS - 2*occR) / 2;/*newline*/if( neighborLink ) {/*newline*/    if( getAttr('$type', neighborLink).match(/A_holds/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position');/*newline*/        setAttr('position', [npos[0] + offset, npos[1] + offset], neigh);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_bottom/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] + cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_top/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0], npos[1] - cellS]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_left/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] - cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_right/) ){/*newline*/        var neigh = getNeighbors('>','*',neighborLink)[0];/*newline*/        var npos = getAttr('position', neigh);/*newline*/        setAttr('position', [npos[0] + cellS, npos[1]]);/*newline*/    } else if( getAttr('$type', neighborLink).match(/A_celldoor/) ){/*newline*/        var door = getNeighbors('>','*',neighborLink)[0];/*newline*/        var celldoors = getNeighbors('<','*', door);/*newline*/        cells = [];/*newline*/        for(i in celldoors) {/*newline*/            var ta = getNeighbors('<', '*', celldoors[i])[0];/*newline*/            if(!(ta in cells)) { cells.push(ta); }/*newline*/        }/*newline*/        if(cells.length == 2) {/*newline*/            var cpos = [getAttr('position', cells[0]), getAttr('position', cells[1])];/*newline*/            var dpos = [Math.max(cpos[0][0], cpos[1][0]), Math.max(cpos[0][1], cpos[1][1])];/*newline*/            if(cpos[0][0] == cpos[1][0]) {/*newline*/                dpos[1] -= cellS;/*newline*/                dpos[0] -= cellS / 2;/*newline*/            } else if(cpos[0][1] == cpos[1][1]) {/*newline*/                dpos[0] -= cellS;/*newline*/                dpos[1] -= cellS / 2;/*newline*/            }/*newline*/            setAttr('position', dpos, door);/*newline*/        }/*newline*/    }/*newline*/}/*newline*/  ",
			"targetType": "Door"
		}
	],
	"cardinalities": {
		"Behaviour": [
			{
				"dir": "in",
				"type": "A_behaviour",
				"min": "0",
				"max": "Infinity"
			}
		],
		"Occupant": [
			{
				"dir": "out",
				"type": "A_behaviour",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_holds",
				"min": "0",
				"max": "Infinity"
			}
		],
		"A_behaviour": [
			{
				"dir": "in",
				"type": "",
				"min": "1",
				"max": "1"
			},
			{
				"dir": "in",
				"type": "Occupant",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Behaviour",
				"min": "0",
				"max": "1"
			}
		],
		"Location": [],
		"Cell": [
			{
				"dir": "out",
				"type": "A_holds",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_cells",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_celldoor",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_bottom",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_bottom",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_left",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_left",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_top",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_top",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_right",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_right",
				"min": "0",
				"max": "Infinity"
			}
		],
		"A_holds": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Occupant",
				"min": "0",
				"max": "1"
			}
		],
		"Room": [
			{
				"dir": "out",
				"type": "A_cells",
				"min": "0",
				"max": "Infinity"
			}
		],
		"A_cells": [
			{
				"dir": "in",
				"type": "Room",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Cell",
				"min": "0",
				"max": "1"
			}
		],
		"Door": [
			{
				"dir": "in",
				"type": "A_celldoor",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_next",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "A_sign",
				"min": "0",
				"max": "Infinity"
			}
		],
		"A_celldoor": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Door",
				"min": "0",
				"max": "1"
			}
		],
		"EmergencySign": [
			{
				"dir": "out",
				"type": "A_next",
				"min": "0",
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "A_sign",
				"min": "0",
				"max": "Infinity"
			}
		],
		"A_next": [
			{
				"dir": "in",
				"type": "EmergencySign",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Door",
				"min": "0",
				"max": "1"
			}
		],
		"A_sign": [
			{
				"dir": "in",
				"type": "Door",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "EmergencySign",
				"min": "0",
				"max": "1"
			}
		],
		"A_bottom": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Cell",
				"min": "0",
				"max": "1"
			}
		],
		"A_left": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Cell",
				"min": "0",
				"max": "1"
			}
		],
		"A_top": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Cell",
				"min": "0",
				"max": "1"
			}
		],
		"A_right": [
			{
				"dir": "in",
				"type": "Cell",
				"min": "0",
				"max": "1"
			},
			{
				"dir": "out",
				"type": "Cell",
				"min": "0",
				"max": "1"
			}
		]
	},
	"legalConnections": {
		"Occupant": {
			"Behaviour": [
				"A_behaviour"
			]
		},
		"Cell": {
			"Occupant": [
				"A_holds"
			],
			"Door": [
				"A_celldoor"
			],
			"Cell": [
				"A_bottom",
				"A_left",
				"A_top",
				"A_right"
			]
		},
		"Room": {
			"Cell": [
				"A_cells"
			]
		},
		"Door": {
			"EmergencySign": [
				"A_sign"
			]
		},
		"EmergencySign": {
			"Door": [
				"A_next"
			]
		}
	},
	"connectorTypes": {
		"A_behaviour": "containment",
		"A_holds": "containment",
		"A_cells": "containment",
		"A_celldoor": "visual",
		"A_next": "visual",
		"A_sign": "containment",
		"A_bottom": "visual",
		"A_left": "visual",
		"A_top": "visual",
		"A_right": "visual"
	},
	"types2parentTypes": {
		"Behaviour": [],
		"Occupant": [
			"Location"
		],
		"A_behaviour": [],
		"Location": [],
		"Cell": [
			"Location"
		],
		"A_holds": [],
		"Room": [],
		"A_cells": [],
		"Door": [
			"Location"
		],
		"A_celldoor": [],
		"EmergencySign": [],
		"A_next": [],
		"A_sign": [],
		"A_bottom": [],
		"A_left": [],
		"A_top": [],
		"A_right": []
	}
}