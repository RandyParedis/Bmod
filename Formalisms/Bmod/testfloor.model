{
	"csm": {
		"nodes": {
			"18": {
				"typename": {
					"type": "string",
					"value": "FloorPlanIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						227.57530000000003,
						48.31110000000001
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						3.6321,
						3.6321
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"137": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 300
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										9
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/FloorPlan/18.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon"
			},
			"19": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						272,
						96
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.2763,
						1.2763
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/19.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"20": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						315.5,
						144.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/20.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/20.instance": "M253.00000000000003,81L315.5,144.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/20.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/19.instance": "M315.6051003220854,144.60678192723873L399.6344962201884,223.63138655971142"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"26": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						352,
						129
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										352,
										129
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/26.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"27": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						442,
						131
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										442,
										131
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/27.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"28": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						351,
						220
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										351,
										220
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/28.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"29": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						443,
						220
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										443,
										220
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/29.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"30": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_leftLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						372,
						163.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_left/30.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/26.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink/30.instance": "M313,168L372,163.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink/30.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/27.instance": "M372.14964278678644,163.49910926912625L480.99928628117914,169.00000424832632"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink"
			},
			"31": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						325.55489688776834,
						270.36005159597147
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/31.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/28.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/31.instance": "M314,366L325.55489688776845,270.3600515959715",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/31.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/26.instance": "M325.55478369838875,270.3603401491779L385.9997737765883,184.00057671038806"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"32": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						486.4673184493538,
						273.3533520163324
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/32.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/29.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/32.instance": "M532,366L486.467318449354,273.35335201633245",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/32.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/27.instance": "M486.46739148069173,273.3536797210521L492.000145954058,192.0006549220543"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"33": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						434.5,
						279.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/33.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/29.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/33.instance": "M508,293L434.5,279.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/33.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/28.instance": "M434.42593589907256,279.48674642404455L411.00030903003835,276.0000553001122"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"34": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						322.0703125,
						133
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/34.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/19.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/34.instance": "M272,96L322.0703125,133",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/34.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/26.instance": "M322.1910594815238,133.08922729045037L397.13984430582536,173.9994230975798"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"35": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						367.0703125,
						133
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/35.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/19.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/35.instance": "M272,96L367.0703125,133",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/35.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/27.instance": "M367.2098476027086,133.05430505764053L487.1400770866491,175.99978675999427"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"36": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						322.0703125,
						178
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/36.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/19.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/36.instance": "M272,96L322.0703125,178",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/36.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/28.instance": "M322.1483843458625,178.12785802686417L396.140299247777,264.99946651656535"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"37": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						367.1839423315294,
						178.09800794738538
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/37.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/19.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/37.instance": "M272,96L367.1839423315294,178.09800794738538",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/37.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/29.instance": "M367.183761248209,178.09785175948738L488.1402630255158,264.99968778994287"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"38": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						529,
						109
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.2763,
						1.2763
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/38.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"39": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						629,
						220
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										629,
										220
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/39.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"40": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						563,
						130
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										563,
										130
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/40.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"41": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						654,
						131
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										654,
										131
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/41.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"42": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						536,
						219
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										536,
										219
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/42.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"43": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						691.5,
						292.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/43.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/39.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/43.instance": "M666,292L691.5,292.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/43.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/42.instance": "M691.4259358990726,292.48674642404455L677.0003090300384,291.0000553001122"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"44": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						743.4673184493538,
						286.3533520163324
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/44.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/39.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/44.instance": "M690,365L743.467318449354,286.35335201633245",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/44.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/41.instance": "M743.4673914806917,286.3536797210521L704.0001459540579,192.0006549220543"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"45": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						582.5548968877683,
						283.36005159597147
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/45.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/42.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/45.instance": "M580,381L582.5548968877686,283.3600515959715",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/45.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/40.instance": "M582.5547836983887,283.3603401491779L596.9997737765882,185.00057671038806"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"46": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_leftLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						629,
						176.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_left/46.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/40.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink/46.instance": "M524,169L629,176.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink/46.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/41.instance": "M629.1496427867864,176.49910926912625L692.9992862811791,169.00000424832632"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_leftLink"
			},
			"47": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						579.0703125,
						146
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/47.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/47.instance": "M529,109L579.0703125,146",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/47.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/40.instance": "M579.1910594815238,146.08922729045037L608.1398443058254,174.9994230975798"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"48": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						624.1839423315294,
						191.09800794738538
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/48.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/48.instance": "M529,109L624.1839423315294,191.09800794738538",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/48.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/39.instance": "M624.1837612482091,191.09785175948738L646.1402630255159,263.99968778994287"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"49": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						579.0703125,
						191
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/49.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/49.instance": "M529,109L579.0703125,191",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/49.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/42.instance": "M579.1483843458625,191.12785802686417L662.140299247777,279.99946651656535"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"50": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						624.0703125,
						146
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/50.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/50.instance": "M529,109L624.0703125,146",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/50.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/41.instance": "M624.2098476027086,146.05430505764053L699.1400770866492,175.99978675999427"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"51": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						582.960935836475,
						159.84987389279377
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/51.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/51.instance": "M253.00000000000003,81L582.960935836475,159.84987389279377",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/51.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance": "M582.960677542974,159.8498121690933L656.6293114881785,236.62983546818913"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"52": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						545.3500000925541,
						268.9877551095962
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/52.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/42.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/52.instance": "M648,279L545.3500000925541,268.9877551095962",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/52.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/29.instance": "M545.3504082550659,268.9877884289849L498.0008155860983,268.000066578457"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"53": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						654,
						311
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										654,
										311
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/53.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"54": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						635.0703125,
						222.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/54.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/38.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/54.instance": "M529,109L635.0703125,222.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/54.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/53.instance": "M635.1214381681154,222.55470676190478L741.1400293598831,335.9993626383136"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"55": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						692.8875001386834,
						300.89903858599797
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/55.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/53.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/55.instance": "M732,336L692.8875001386834,300.89903858599797",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/55.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/39.instance": "M692.9438581903125,300.94961632463946L629.0002162074704,265.00019403234523"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"56": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						570,
						367
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/56.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"57": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						460.5,
						284
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/57.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/57.instance": "M253.00000000000003,81L460.5,284",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/57.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/56.instance": "M460.60710552490434,284.1047827544847L669.9994081200541,466.99942095600477"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"58": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						654,
						401
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										654,
										401
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/58.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"59": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						618.1733202424266,
						418.1092856399416
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/59.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/56.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/59.instance": "M570,367L618.1733202424266,418.1092856399416",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/59.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/58.instance": "M618.1730259349898,418.1089733956792L666.1400369445153,468.99937610495624"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"60": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						683.0083333238073,
						412.8500001714678
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/60.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/58.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/60.instance": "M680,467L683.0083333238073,412.8500001714678",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/60.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/53.instance": "M683.0041589494332,412.9251389102035L685.9999845774272,359.00027760630996"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"61": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						501
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										605,
										501
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/61.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"62": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						619.0703125,
						451
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/62.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/56.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/62.instance": "M570,367L619.0703125,451",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/62.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/61.instance": "M619.1460379422491,451.1296290328072L668.140312299901,534.9994647108"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"63": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						676.0130434651106,
						480.35000015122876
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/63.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/61.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/63.instance": "M671,538L676.0130434651106,480.35000015122876",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/63.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/58.instance": "M676.0065103953402,480.42513045358777L680.9999773288403,423.00026071833645"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"64": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						479,
						567
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						2.2466,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/64.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"65": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						513.83,
						396.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/65.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/65.instance": "M253.00000000000003,81L513.83,396.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/65.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance": "M513.8776540481919,396.5576423425393L703.6594155260184,666.9992930202002"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"68": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						934,
						542
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.2763,
						1.2763
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/68.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"69": {
				"typename": {
					"type": "string",
					"value": "RoomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						576,
						769
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"100": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										13,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"104": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#8c8c8c",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Room/69.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon"
			},
			"70": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						211
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/70.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/70.instance": "M253.00000000000003,81L605,211",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/70.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/68.instance": "M605.0701183995877,211.02589599984773L1061.6446025121868,669.6339577459783"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"71": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_roomsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						473.07013814984714,
						497.13262486516544
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_rooms/71.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/FloorPlanIcon/18.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/71.instance": "M253.00000000000003,81L473.07013814984714,497.13262486516544",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink/71.instance--/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/69.instance": "M473.03495727167973,497.0661010228126L675.9996274532114,868.9992955478903"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_roomsLink"
			},
			"85": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						515,
						591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										515,
										591
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/85.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"86": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						515,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										515,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/86.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"87": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						519.6851340028966,
						601.5976413935665
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/87.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/87.instance": "M479,567L519.6851340028966,601.5976413935665",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/87.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/85.instance": "M519.6276149803388,601.5487286256838L560.1404084916524,635.9998158866043"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"88": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						520.5703125,
						648.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/88.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/88.instance": "M479,567L520.5703125,648.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/88.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/86.instance": "M520.6386843668452,648.6340453514242L562.1403240228858,729.9994099242142"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"89": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						575.507731947806,
						701.3500002125625
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/89.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/86.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/89.instance": "M573,750L575.507731947806,701.3500002125625",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/89.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/85.instance": "M575.5038580069288,701.4251546655815L577.9999840687739,653.0003090657882"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"90": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										605,
										591
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/90.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"91": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										605,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/91.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"92": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						572.0703125,
						603
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/92.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/92.instance": "M479,567L572.0703125,603",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/92.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance": "M572.2103374326848,603.0541622504668L665.1400613296654,638.9997819698731"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"93": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						627.5,
						645.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/93.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/93.instance": "M679,644L627.5,645.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/93.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/85.instance": "M627.4251456544959,645.5021802236555L576.0002910736167,646.9999915221276"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"97": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						606.5703125,
						649
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/97.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/97.instance": "M479,567L606.5703125,649",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/97.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance": "M606.633216004437,649.0404332893974L734.1398751552338,730.9995180126972"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"98": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						655.3500000771575,
						726.9925465876848
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/98.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/98.instance": "M736,731L655.3500000771575,726.9925465876848",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/98.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/86.instance": "M655.3503727473912,726.9925651054605L575.0007447243547,723.0000370049368"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"99": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_topLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						660.9948276067079,
						676.1499994054697
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_top/99.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/99.instance": "M662,647L660.9948276067079,676.1499994054697",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/99.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance": "M660.9974227135946,676.0747413057602L660.0000178154086,704.9994833531509"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_topLink"
			},
			"100": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						695,
						591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										695,
										591
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/100.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"101": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						785,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										785,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/101.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"102": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						695,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										695,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/102.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"103": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						620.7157614284538,
						603.0369862955861
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/103.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/103.instance": "M479,567L620.7157614284538,603.0369862955861",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/103.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/100.instance": "M620.6427381050833,603.0184171507215L762.1397290109879,638.9997721584147"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"104": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						696.8500001300729,
						641.9975806472593
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/104.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/100.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/104.instance": "M759,643L696.8500001300729,641.9975806472593",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/104.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance": "M696.8504839997859,641.9975884516093L635.0009667013528,641.0000155919573"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"105": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						664.0703125,
						648
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/105.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/105.instance": "M479,567L664.0703125,648",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/105.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/102.instance": "M664.1388226218891,648.0299849273395L849.1400129981465,728.9997321442349"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"106": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						749.3500000877154,
						709.001986753805
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/106.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/102.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/106.instance": "M825,708L749.3500000877154,709.001986753805",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/106.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance": "M749.3503974380135,709.0019814908873L674.0007940002631,709.9999894834402"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"107": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_topLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						730,
						683.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_top/107.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/100.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/107.instance": "M730,651L730,683.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/107.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/102.instance": "M729.9999999999999,683.5771093106941L730,715.9995389349112"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_topLink"
			},
			"108": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_topLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						657.9565218608926,
						584.6456517660095
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_top/108.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/61.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/108.instance": "M668,551L657.9565218608926,584.6456517660095",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/108.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance": "M657.9783238966259,584.5726149463035L648.0001259021823,617.9995782276892"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_topLink"
			},
			"109": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						664.5703125,
						642
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/109.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/109.instance": "M479,567L664.5703125,642",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/109.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/101.instance": "M664.639692599149,642.0280406244193L850.1399990133452,716.9997470015626"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"110": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						790.5,
						731
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/110.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/101.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/110.instance": "M831,722L790.5,731",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/110.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/102.instance": "M790.4260953666194,731.0164232518623L750.000361098214,739.9999197559525"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"111": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						875,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										875,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/111.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"112": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						674.7184718150542,
						599.0242424221811
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/112.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/112.instance": "M479,567L674.7184718150542,599.0242424221811",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/112.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/111.instance": "M674.6441676784355,599.0120844809201L870.1399518886377,630.9998898628156"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"113": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						850.5,
						687.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/113.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/111.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/113.instance": "M870,639L850.5,687.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/113.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/101.instance": "M850.4719290951563,687.5698173787139L831.0001081037352,735.9997311266072"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"114": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						965,
						681
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										965,
										681
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/114.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"115": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						965,
						591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										965,
										591
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/115.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"116": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1055,
						591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										1055,
										591
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/116.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"117": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						978.5703125,
						586
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/117.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/68.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/117.instance": "M934,542L978.5703125,586",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/117.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/114.instance": "M978.6769388595935,586.1052619907503L1023.13994113024,629.999324880896"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"118": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						981.8788820498787,
						669.0894409477819
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/118.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/114.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/118.instance": "M1047,621L981.8788820498787,669.0894409477819",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/118.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/111.instance": "M981.8791829637321,669.0892187344747L917.0006013302243,716.9995559407573"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"119": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						977.0703125,
						581
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/119.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/68.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/119.instance": "M934,542L977.0703125,581",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/119.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/115.instance": "M977.1259108311115,581.050344071995L1020.1404330608229,619.9998261998237"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"120": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_topLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1008.9454546393689,
						668.1397724866172
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_top/120.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/115.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/120.instance": "M1025,627L1008.9454546393689,668.1397724866172",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_topLink/120.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/114.instance": "M1008.9727892678577,668.0697275011145L993.0001238730279,708.9996825753664"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_topLink"
			},
			"121": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1018.7010912874318,
						590.0742267778273
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/121.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/68.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/121.instance": "M934,542L1018.7010912874318,590.0742267778273",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/121.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/116.instance": "M1018.7008216406377,590.0740737330327L1103.140086076489,637.9996941204572"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"122": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_rightLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1035.350000337325,
						637.4863636670295
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_right/122.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/116.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/122.instance": "M1074,641L1035.350000337325,637.4863636670295",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink/122.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/115.instance": "M1035.4251948470326,637.4931995315484L997.0003892730647,634.0000353884606"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_rightLink"
			},
			"123": {
				"typename": {
					"type": "string",
					"value": "ExitIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						624
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"146": {
								"width": {
									"type": "double",
									"value": 50
								},
								"height": {
									"type": "double",
									"value": 20
								},
								"cornerRadius": {
									"type": "double",
									"value": 2
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#2cdd23",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 3,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										9
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"147": {
								"textContent": {
									"type": "string",
									"value": "EXIT"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"148": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23.17245190198446,
										15.30430948378364
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "146",
								"dest": "148"
							},
							{
								"src": "148",
								"dest": "147"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Exit/123.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/ExitIcon"
			},
			"124": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellexitLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1074.5972217776762,
						613.1166661332113
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cellexit/124.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/116.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink/124.instance": "M1057,592L1074.5972217776762,613.1166661332113",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink/124.instance--/Formalisms/Bmod/Bmod.defaultIcons/ExitIcon/123.instance": "M1074.5484310150057,613.0581172180068L1091.9996403622415,633.9995684346898"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink"
			},
			"125": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						771
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										605,
										771
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/125.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"126": {
				"typename": {
					"type": "string",
					"value": "CellIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						605,
						861
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"95": {
								"width": {
									"type": "double",
									"value": 90
								},
								"height": {
									"type": "double",
									"value": 90
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = \"#ffffff\";\nif(getAttr(\"On_fire\")) { c = \"#ff0000\"; }\n({style:{fill:c}})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"97": {
								"textContent": {
									"type": "string",
									"value": [
										605,
										861
									]
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\nvar c = getAttr(\"position\");\n({'textContent':c})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"99": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.03798541259755,
										9.593747829861059
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "95",
								"dest": "99"
							},
							{
								"src": "99",
								"dest": "97"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Cell/126.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/CellIcon"
			},
			"127": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						617.1774523376346,
						809.6056520673955
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/127.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/69.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/127.instance": "M576,769L617.1774523376346,809.6056520673955",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/127.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/125.instance": "M617.123789294224,809.5527342022557L655.1404387776772,845.9998163636066"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"128": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellsLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						637.1575557771939,
						855.1228571057121
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cells/128.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/69.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/128.instance": "M576,769L637.1575557771939,855.1228571057121",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink/128.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/126.instance": "M637.1573895996235,855.1226230923185L698.1402928555771,940.9995322699492"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellsLink"
			},
			"129": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						648.9910891205581,
						783.3500001960592
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/129.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/125.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/129.instance": "M652,834L648.9910891205581,783.3500001960592",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/129.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance": "M648.9955533785671,783.4251485392135L646.0000176336818,733.0002968336437"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"130": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_bottomLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						672.9338983683824,
						874.3639831810945
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_bottom/130.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/126.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/130.instance": "M699,928L672.9338983683824,874.3639831810945",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink/130.instance--/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/125.instance": "M672.9670051787998,874.4321068102229L647.0001119734734,821.0002304069549"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_bottomLink"
			},
			"131": {
				"typename": {
					"type": "string",
					"value": "ExitIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						366,
						159
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"146": {
								"width": {
									"type": "double",
									"value": 50
								},
								"height": {
									"type": "double",
									"value": 20
								},
								"cornerRadius": {
									"type": "double",
									"value": 2
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#2cdd23",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 3,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										9
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"147": {
								"textContent": {
									"type": "string",
									"value": "EXIT"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "10px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"148": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23.17245190198446,
										15.30430948378364
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "146",
								"dest": "148"
							},
							{
								"src": "148",
								"dest": "147"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Exit/131.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/ExitIcon"
			},
			"132": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_cellexitLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						372.60471648407747,
						149.61037683456814
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_cellexit/132.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/26.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink/132.instance": "M354,130L372.60471648407747,149.61037683456814",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink/132.instance--/Formalisms/Bmod/Bmod.defaultIcons/ExitIcon/131.instance": "M372.55216084992526,149.55498035532662L390.9996053386352,168.9995840055885"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_cellexitLink"
			},
			"133": {
				"typename": {
					"type": "string",
					"value": "OccupancyConditionIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						824,
						601
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"157": {
								"r": {
									"type": "double",
									"value": 35
								},
								"rays": {
									"type": "int",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Star",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"159": {
								"textContent": {
									"type": "string",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr(\"max_amount\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										32,
										31
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"161": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										9.961470518915803,
										14.110203469642784
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "157",
								"dest": "161"
							},
							{
								"src": "161",
								"dest": "159"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/OccupancyCondition/133.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/OccupancyConditionIcon"
			},
			"134": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#42f4ce",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_occ_conditionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						668.2916439937657,
						599.8546120149631
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_occ_condition/134.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/RoomIcon/64.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_occ_conditionLink/134.instance": "M479,567L668.2916439937657,599.8546120149631",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_occ_conditionLink/134.instance--/Formalisms/Bmod/Bmod.defaultIcons/OccupancyConditionIcon/133.instance": "M668.2173348254669,599.8417144625824L857.2862837529743,632.6576741638713"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_occ_conditionLink"
			},
			"138": {
				"typename": {
					"type": "string",
					"value": "DoorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						454,
						391
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"71": {
								"r": {
									"type": "double",
									"value": 45
								},
								"sides": {
									"type": "int",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#592509",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Polygon",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Door/138.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon"
			},
			"139": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						497.5,
						352
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/139.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/29.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/139.instance": "M499,268L497.5,352",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/139.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/138.instance": "M497.49732780737884,352.14964278678616L496.0000127449789,435.99928628117914"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"140": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						543.5,
						354.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/140.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/42.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/140.instance": "M579,266L543.5,354.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/140.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/138.instance": "M543.4440653945335,354.63944260799406L508.0002358454585,442.99941204723723"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"141": {
				"typename": {
					"type": "string",
					"value": "DoorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						803,
						347
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"71": {
								"r": {
									"type": "double",
									"value": 45
								},
								"sides": {
									"type": "int",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#592509",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Polygon",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Door/141.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon"
			},
			"142": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						773.1445254447756,
						367.0437955893259
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/142.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/53.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/142.instance": "M707,347L773.1445254447756,367.0437955893259",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/142.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/141.instance": "M773.144103473271,367.0436677191731L838.9991568765548,386.99974450804694"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"143": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						781.1386206017467,
						433.44103452015247
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/143.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/58.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/143.instance": "M714,462L781.1386206017467,433.44103452015247",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/143.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/141.instance": "M781.1382382005697,433.44119718333974L847.9992358994629,405.0003250278404"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"144": {
				"typename": {
					"type": "string",
					"value": "DoorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						915,
						821
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"71": {
								"r": {
									"type": "double",
									"value": 45
								},
								"sides": {
									"type": "int",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#592509",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Polygon",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Door/144.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon"
			},
			"145": {
				"typename": {
					"type": "string",
					"value": "DoorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						465,
						788
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"71": {
								"r": {
									"type": "double",
									"value": 45
								},
								"sides": {
									"type": "int",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#592509",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Polygon",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Door/145.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon"
			},
			"146": {
				"typename": {
					"type": "string",
					"value": "DoorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						801,
						478
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"71": {
								"r": {
									"type": "double",
									"value": 45
								},
								"sides": {
									"type": "int",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#592509",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Polygon",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/Door/146.instance"
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon"
			},
			"147": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						936.0434210275732,
						797.1440788642204
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/147.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/111.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/147.instance": "M914,724L936.0434210275732,797.1440788642204",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/147.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/144.instance": "M936.0433067618426,797.1436997097504L957.9997716686106,869.9992423549351"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"148": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						977.4617241622043,
						790.6458619764647
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/148.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/114.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/148.instance": "M996,720L977.4617241622043,790.6458619764647",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/148.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/144.instance": "M977.461829750589,790.645459599107L959.0002109829841,860.9991959837631"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"149": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						583.3776786292145,
						779.0874999586639
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/149.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/91.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/149.instance": "M652,730L583.3776786292145,779.0874999586639",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/149.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/145.instance": "M583.3779698702995,779.0872916256253L515.0005820207051,827.9995836640212"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"150": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						575.5,
						827.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/150.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/125.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/150.instance": "M648,819L575.5,827.5",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/150.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/145.instance": "M575.3504138874432,827.5175376821619L503.0008268252081,835.9999030618721"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"151": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						738.5,
						538
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/151.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/61.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/151.instance": "M630,551L738.5,538",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/151.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/146.instance": "M738.6490379181068,537.9821429222545L846.999452401452,525.0000656108859"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			},
			"152": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 0.5,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "A_celldoorLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						752.1365957117016,
						583.4368085258951
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bmod/Bmod/A_celldoor/152.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bmod/Bmod.defaultIcons/CellIcon/90.instance--/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/152.instance": "M645,633L752.1365957117016,583.4368085258951",
						"/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink/152.instance--/Formalisms/Bmod/Bmod.defaultIcons/DoorIcon/146.instance": "M752.1363632084746,583.4369160857991L858.9995352570431,534.0002149979099"
					}
				},
				"$type": "/Formalisms/Bmod/Bmod.defaultIcons/A_celldoorLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/Bmod/Bmod.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"18": {
				"$type": "/Formalisms/Bmod/Bmod/FloorPlan"
			},
			"19": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"20": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"26": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						352,
						129
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"27": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						442,
						131
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"28": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						351,
						220
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"29": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						443,
						220
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"30": {
				"$type": "/Formalisms/Bmod/Bmod/A_left"
			},
			"31": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"32": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"33": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"34": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"35": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"36": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"37": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"38": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"39": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						629,
						220
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"40": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						563,
						130
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"41": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						654,
						131
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"42": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						536,
						219
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"43": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"44": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"45": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"46": {
				"$type": "/Formalisms/Bmod/Bmod/A_left"
			},
			"47": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"48": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"49": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"50": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"51": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"52": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"53": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						654,
						311
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"54": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"55": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"56": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"57": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"58": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						654,
						401
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"59": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"60": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"61": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						605,
						501
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"62": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"63": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"64": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"65": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"68": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"69": {
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/Room"
			},
			"70": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"71": {
				"$type": "/Formalisms/Bmod/Bmod/A_rooms"
			},
			"85": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						515,
						591
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"86": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						515,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"87": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"88": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"89": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"90": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						605,
						591
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"91": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						605,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"92": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"93": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"97": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"98": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"99": {
				"$type": "/Formalisms/Bmod/Bmod/A_top"
			},
			"100": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						695,
						591
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"101": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						785,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"102": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						695,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"103": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"104": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"105": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"106": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"107": {
				"$type": "/Formalisms/Bmod/Bmod/A_top"
			},
			"108": {
				"$type": "/Formalisms/Bmod/Bmod/A_top"
			},
			"109": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"110": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"111": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						875,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"112": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"113": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"114": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						965,
						681
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"115": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						965,
						591
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"116": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						1055,
						591
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"117": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"118": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"119": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"120": {
				"$type": "/Formalisms/Bmod/Bmod/A_top"
			},
			"121": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"122": {
				"$type": "/Formalisms/Bmod/Bmod/A_right"
			},
			"123": {
				"$type": "/Formalisms/Bmod/Bmod/Exit"
			},
			"124": {
				"$type": "/Formalisms/Bmod/Bmod/A_cellexit"
			},
			"125": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						605,
						771
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"126": {
				"On_fire": {
					"type": "boolean",
					"value": false
				},
				"position": {
					"type": "list<int>",
					"value": [
						605,
						861
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Cell"
			},
			"127": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"128": {
				"$type": "/Formalisms/Bmod/Bmod/A_cells"
			},
			"129": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"130": {
				"$type": "/Formalisms/Bmod/Bmod/A_bottom"
			},
			"131": {
				"$type": "/Formalisms/Bmod/Bmod/Exit"
			},
			"132": {
				"$type": "/Formalisms/Bmod/Bmod/A_cellexit"
			},
			"133": {
				"max_amount": {
					"type": "int",
					"value": 1
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/Bmod/Bmod/OccupancyCondition"
			},
			"134": {
				"$type": "/Formalisms/Bmod/Bmod/A_occ_condition"
			},
			"138": {
				"position": {
					"type": "list<int>",
					"value": [
						454,
						391
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Door"
			},
			"139": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"140": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"141": {
				"position": {
					"type": "list<int>",
					"value": [
						803,
						347
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Door"
			},
			"142": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"143": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"144": {
				"position": {
					"type": "list<int>",
					"value": [
						915,
						821
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Door"
			},
			"145": {
				"position": {
					"type": "list<int>",
					"value": [
						465,
						788
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Door"
			},
			"146": {
				"position": {
					"type": "list<int>",
					"value": [
						801,
						478
					]
				},
				"$type": "/Formalisms/Bmod/Bmod/Door"
			},
			"147": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"148": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"149": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"150": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"151": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			},
			"152": {
				"$type": "/Formalisms/Bmod/Bmod/A_celldoor"
			}
		},
		"edges": [
			{
				"src": "18",
				"dest": "20"
			},
			{
				"src": "20",
				"dest": "19"
			},
			{
				"src": "26",
				"dest": "30"
			},
			{
				"src": "30",
				"dest": "27"
			},
			{
				"src": "28",
				"dest": "31"
			},
			{
				"src": "31",
				"dest": "26"
			},
			{
				"src": "29",
				"dest": "32"
			},
			{
				"src": "32",
				"dest": "27"
			},
			{
				"src": "29",
				"dest": "33"
			},
			{
				"src": "33",
				"dest": "28"
			},
			{
				"src": "19",
				"dest": "34"
			},
			{
				"src": "34",
				"dest": "26"
			},
			{
				"src": "19",
				"dest": "35"
			},
			{
				"src": "35",
				"dest": "27"
			},
			{
				"src": "19",
				"dest": "36"
			},
			{
				"src": "36",
				"dest": "28"
			},
			{
				"src": "19",
				"dest": "37"
			},
			{
				"src": "37",
				"dest": "29"
			},
			{
				"src": "39",
				"dest": "43"
			},
			{
				"src": "43",
				"dest": "42"
			},
			{
				"src": "39",
				"dest": "44"
			},
			{
				"src": "44",
				"dest": "41"
			},
			{
				"src": "42",
				"dest": "45"
			},
			{
				"src": "45",
				"dest": "40"
			},
			{
				"src": "40",
				"dest": "46"
			},
			{
				"src": "46",
				"dest": "41"
			},
			{
				"src": "38",
				"dest": "47"
			},
			{
				"src": "47",
				"dest": "40"
			},
			{
				"src": "38",
				"dest": "48"
			},
			{
				"src": "48",
				"dest": "39"
			},
			{
				"src": "38",
				"dest": "49"
			},
			{
				"src": "49",
				"dest": "42"
			},
			{
				"src": "38",
				"dest": "50"
			},
			{
				"src": "50",
				"dest": "41"
			},
			{
				"src": "18",
				"dest": "51"
			},
			{
				"src": "51",
				"dest": "38"
			},
			{
				"src": "42",
				"dest": "52"
			},
			{
				"src": "52",
				"dest": "29"
			},
			{
				"src": "38",
				"dest": "54"
			},
			{
				"src": "54",
				"dest": "53"
			},
			{
				"src": "53",
				"dest": "55"
			},
			{
				"src": "55",
				"dest": "39"
			},
			{
				"src": "18",
				"dest": "57"
			},
			{
				"src": "57",
				"dest": "56"
			},
			{
				"src": "56",
				"dest": "59"
			},
			{
				"src": "59",
				"dest": "58"
			},
			{
				"src": "58",
				"dest": "60"
			},
			{
				"src": "60",
				"dest": "53"
			},
			{
				"src": "56",
				"dest": "62"
			},
			{
				"src": "62",
				"dest": "61"
			},
			{
				"src": "61",
				"dest": "63"
			},
			{
				"src": "63",
				"dest": "58"
			},
			{
				"src": "18",
				"dest": "65"
			},
			{
				"src": "65",
				"dest": "64"
			},
			{
				"src": "18",
				"dest": "70"
			},
			{
				"src": "70",
				"dest": "68"
			},
			{
				"src": "18",
				"dest": "71"
			},
			{
				"src": "71",
				"dest": "69"
			},
			{
				"src": "64",
				"dest": "87"
			},
			{
				"src": "87",
				"dest": "85"
			},
			{
				"src": "64",
				"dest": "88"
			},
			{
				"src": "88",
				"dest": "86"
			},
			{
				"src": "86",
				"dest": "89"
			},
			{
				"src": "89",
				"dest": "85"
			},
			{
				"src": "64",
				"dest": "92"
			},
			{
				"src": "92",
				"dest": "90"
			},
			{
				"src": "90",
				"dest": "93"
			},
			{
				"src": "93",
				"dest": "85"
			},
			{
				"src": "64",
				"dest": "97"
			},
			{
				"src": "97",
				"dest": "91"
			},
			{
				"src": "91",
				"dest": "98"
			},
			{
				"src": "98",
				"dest": "86"
			},
			{
				"src": "90",
				"dest": "99"
			},
			{
				"src": "99",
				"dest": "91"
			},
			{
				"src": "64",
				"dest": "103"
			},
			{
				"src": "103",
				"dest": "100"
			},
			{
				"src": "100",
				"dest": "104"
			},
			{
				"src": "104",
				"dest": "90"
			},
			{
				"src": "64",
				"dest": "105"
			},
			{
				"src": "105",
				"dest": "102"
			},
			{
				"src": "102",
				"dest": "106"
			},
			{
				"src": "106",
				"dest": "91"
			},
			{
				"src": "100",
				"dest": "107"
			},
			{
				"src": "107",
				"dest": "102"
			},
			{
				"src": "61",
				"dest": "108"
			},
			{
				"src": "108",
				"dest": "90"
			},
			{
				"src": "64",
				"dest": "109"
			},
			{
				"src": "109",
				"dest": "101"
			},
			{
				"src": "101",
				"dest": "110"
			},
			{
				"src": "110",
				"dest": "102"
			},
			{
				"src": "64",
				"dest": "112"
			},
			{
				"src": "112",
				"dest": "111"
			},
			{
				"src": "111",
				"dest": "113"
			},
			{
				"src": "113",
				"dest": "101"
			},
			{
				"src": "68",
				"dest": "117"
			},
			{
				"src": "117",
				"dest": "114"
			},
			{
				"src": "114",
				"dest": "118"
			},
			{
				"src": "118",
				"dest": "111"
			},
			{
				"src": "68",
				"dest": "119"
			},
			{
				"src": "119",
				"dest": "115"
			},
			{
				"src": "115",
				"dest": "120"
			},
			{
				"src": "120",
				"dest": "114"
			},
			{
				"src": "68",
				"dest": "121"
			},
			{
				"src": "121",
				"dest": "116"
			},
			{
				"src": "116",
				"dest": "122"
			},
			{
				"src": "122",
				"dest": "115"
			},
			{
				"src": "116",
				"dest": "124"
			},
			{
				"src": "124",
				"dest": "123"
			},
			{
				"src": "69",
				"dest": "127"
			},
			{
				"src": "127",
				"dest": "125"
			},
			{
				"src": "69",
				"dest": "128"
			},
			{
				"src": "128",
				"dest": "126"
			},
			{
				"src": "125",
				"dest": "129"
			},
			{
				"src": "129",
				"dest": "91"
			},
			{
				"src": "126",
				"dest": "130"
			},
			{
				"src": "130",
				"dest": "125"
			},
			{
				"src": "26",
				"dest": "132"
			},
			{
				"src": "132",
				"dest": "131"
			},
			{
				"src": "64",
				"dest": "134"
			},
			{
				"src": "134",
				"dest": "133"
			},
			{
				"src": "29",
				"dest": "139"
			},
			{
				"src": "139",
				"dest": "138"
			},
			{
				"src": "42",
				"dest": "140"
			},
			{
				"src": "140",
				"dest": "138"
			},
			{
				"src": "53",
				"dest": "142"
			},
			{
				"src": "142",
				"dest": "141"
			},
			{
				"src": "58",
				"dest": "143"
			},
			{
				"src": "143",
				"dest": "141"
			},
			{
				"src": "111",
				"dest": "147"
			},
			{
				"src": "147",
				"dest": "144"
			},
			{
				"src": "114",
				"dest": "148"
			},
			{
				"src": "148",
				"dest": "144"
			},
			{
				"src": "91",
				"dest": "149"
			},
			{
				"src": "149",
				"dest": "145"
			},
			{
				"src": "125",
				"dest": "150"
			},
			{
				"src": "150",
				"dest": "145"
			},
			{
				"src": "61",
				"dest": "151"
			},
			{
				"src": "151",
				"dest": "146"
			},
			{
				"src": "90",
				"dest": "152"
			},
			{
				"src": "152",
				"dest": "146"
			}
		],
		"metamodels": [
			"/Formalisms/Bmod/Bmod"
		]
	}
}