/*
 * generated by Xtext 2.16.0
 */
package org.xtext.bmod.scoping

//import org.eclipse.emf.ecore.EObject
//import org.eclipse.emf.ecore.EReference
//import org.eclipse.xtext.EcoreUtil2
//import org.eclipse.xtext.scoping.IScope
//import org.eclipse.xtext.scoping.Scopes
//import org.xtext.bmod.bmod.BmodPackage
//import org.xtext.bmod.bmod.EmergencySign
//import org.xtext.bmod.bmod.Floorplan

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class BmodScopeProvider extends AbstractBmodScopeProvider {
//	override getScope(EObject context, EReference reference) {
//		if(context instanceof EmergencySign && reference == BmodPackage.Literals.EMERGENCY_SIGN__ON) {
//			val root = EcoreUtil2.getContainerOfType(context, Floorplan);
//			return Scopes.scopeFor(root.doors);
//		}
//		return super.getScope(context, reference);
//	}
//	
//	def IScope scope_EmergencySign_on(EmergencySign context, EReference reference) {
//		var scopes = newArrayList(context.on);
//		return Scopes.scopeFor(scopes);
//	}
}
