/**
 * generated by Xtext 2.16.0
 */
package org.xtext.bmod.bmod.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.bmod.bmod.Area;
import org.xtext.bmod.bmod.BmodPackage;
import org.xtext.bmod.bmod.Room;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Room</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bmod.bmod.impl.RoomImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.bmod.bmod.impl.RoomImpl#getNamed <em>Named</em>}</li>
 *   <li>{@link org.xtext.bmod.bmod.impl.RoomImpl#getArea <em>Area</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RoomImpl extends MinimalEObjectImpl.Container implements Room
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getNamed() <em>Named</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNamed()
   * @generated
   * @ordered
   */
  protected static final String NAMED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNamed() <em>Named</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNamed()
   * @generated
   * @ordered
   */
  protected String named = NAMED_EDEFAULT;

  /**
   * The cached value of the '{@link #getArea() <em>Area</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArea()
   * @generated
   * @ordered
   */
  protected Area area;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RoomImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BmodPackage.Literals.ROOM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BmodPackage.ROOM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNamed()
  {
    return named;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNamed(String newNamed)
  {
    String oldNamed = named;
    named = newNamed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BmodPackage.ROOM__NAMED, oldNamed, named));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Area getArea()
  {
    return area;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArea(Area newArea, NotificationChain msgs)
  {
    Area oldArea = area;
    area = newArea;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BmodPackage.ROOM__AREA, oldArea, newArea);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArea(Area newArea)
  {
    if (newArea != area)
    {
      NotificationChain msgs = null;
      if (area != null)
        msgs = ((InternalEObject)area).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BmodPackage.ROOM__AREA, null, msgs);
      if (newArea != null)
        msgs = ((InternalEObject)newArea).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BmodPackage.ROOM__AREA, null, msgs);
      msgs = basicSetArea(newArea, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BmodPackage.ROOM__AREA, newArea, newArea));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BmodPackage.ROOM__AREA:
        return basicSetArea(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BmodPackage.ROOM__NAME:
        return getName();
      case BmodPackage.ROOM__NAMED:
        return getNamed();
      case BmodPackage.ROOM__AREA:
        return getArea();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BmodPackage.ROOM__NAME:
        setName((String)newValue);
        return;
      case BmodPackage.ROOM__NAMED:
        setNamed((String)newValue);
        return;
      case BmodPackage.ROOM__AREA:
        setArea((Area)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BmodPackage.ROOM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case BmodPackage.ROOM__NAMED:
        setNamed(NAMED_EDEFAULT);
        return;
      case BmodPackage.ROOM__AREA:
        setArea((Area)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BmodPackage.ROOM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case BmodPackage.ROOM__NAMED:
        return NAMED_EDEFAULT == null ? named != null : !NAMED_EDEFAULT.equals(named);
      case BmodPackage.ROOM__AREA:
        return area != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", named: ");
    result.append(named);
    result.append(')');
    return result.toString();
  }

} //RoomImpl
