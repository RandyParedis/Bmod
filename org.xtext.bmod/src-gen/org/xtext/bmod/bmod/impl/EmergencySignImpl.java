/**
 * generated by Xtext 2.16.0
 */
package org.xtext.bmod.bmod.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.bmod.bmod.BmodPackage;
import org.xtext.bmod.bmod.Door;
import org.xtext.bmod.bmod.EmergencySign;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Emergency Sign</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bmod.bmod.impl.EmergencySignImpl#getOn <em>On</em>}</li>
 *   <li>{@link org.xtext.bmod.bmod.impl.EmergencySignImpl#getTo <em>To</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EmergencySignImpl extends MinimalEObjectImpl.Container implements EmergencySign
{
  /**
   * The cached value of the '{@link #getOn() <em>On</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOn()
   * @generated
   * @ordered
   */
  protected Door on;

  /**
   * The cached value of the '{@link #getTo() <em>To</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTo()
   * @generated
   * @ordered
   */
  protected Door to;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EmergencySignImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BmodPackage.Literals.EMERGENCY_SIGN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Door getOn()
  {
    if (on != null && on.eIsProxy())
    {
      InternalEObject oldOn = (InternalEObject)on;
      on = (Door)eResolveProxy(oldOn);
      if (on != oldOn)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BmodPackage.EMERGENCY_SIGN__ON, oldOn, on));
      }
    }
    return on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Door basicGetOn()
  {
    return on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOn(Door newOn)
  {
    Door oldOn = on;
    on = newOn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BmodPackage.EMERGENCY_SIGN__ON, oldOn, on));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Door getTo()
  {
    if (to != null && to.eIsProxy())
    {
      InternalEObject oldTo = (InternalEObject)to;
      to = (Door)eResolveProxy(oldTo);
      if (to != oldTo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BmodPackage.EMERGENCY_SIGN__TO, oldTo, to));
      }
    }
    return to;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Door basicGetTo()
  {
    return to;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTo(Door newTo)
  {
    Door oldTo = to;
    to = newTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BmodPackage.EMERGENCY_SIGN__TO, oldTo, to));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BmodPackage.EMERGENCY_SIGN__ON:
        if (resolve) return getOn();
        return basicGetOn();
      case BmodPackage.EMERGENCY_SIGN__TO:
        if (resolve) return getTo();
        return basicGetTo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BmodPackage.EMERGENCY_SIGN__ON:
        setOn((Door)newValue);
        return;
      case BmodPackage.EMERGENCY_SIGN__TO:
        setTo((Door)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BmodPackage.EMERGENCY_SIGN__ON:
        setOn((Door)null);
        return;
      case BmodPackage.EMERGENCY_SIGN__TO:
        setTo((Door)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BmodPackage.EMERGENCY_SIGN__ON:
        return on != null;
      case BmodPackage.EMERGENCY_SIGN__TO:
        return to != null;
    }
    return super.eIsSet(featureID);
  }

} //EmergencySignImpl
