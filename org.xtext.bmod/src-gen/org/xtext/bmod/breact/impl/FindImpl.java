/**
 * generated by Xtext 2.16.0
 */
package org.xtext.bmod.breact.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.bmod.breact.BreactPackage;
import org.xtext.bmod.breact.Distance;
import org.xtext.bmod.breact.Find;
import org.xtext.bmod.breact.Locatable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Find</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#isGlobal <em>Global</em>}</li>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#getDistance <em>Distance</em>}</li>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#isFrom <em>From</em>}</li>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#isBurning <em>Burning</em>}</li>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#isNormal <em>Normal</em>}</li>
 *   <li>{@link org.xtext.bmod.breact.impl.FindImpl#getLocatable <em>Locatable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FindImpl extends MinimalEObjectImpl.Container implements Find
{
  /**
   * The default value of the '{@link #isGlobal() <em>Global</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGlobal()
   * @generated
   * @ordered
   */
  protected static final boolean GLOBAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isGlobal() <em>Global</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGlobal()
   * @generated
   * @ordered
   */
  protected boolean global = GLOBAL_EDEFAULT;

  /**
   * The default value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected static final Distance DISTANCE_EDEFAULT = Distance.NEAREST;

  /**
   * The cached value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected Distance distance = DISTANCE_EDEFAULT;

  /**
   * The default value of the '{@link #isFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFrom()
   * @generated
   * @ordered
   */
  protected static final boolean FROM_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFrom() <em>From</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFrom()
   * @generated
   * @ordered
   */
  protected boolean from = FROM_EDEFAULT;

  /**
   * The default value of the '{@link #isBurning() <em>Burning</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBurning()
   * @generated
   * @ordered
   */
  protected static final boolean BURNING_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBurning() <em>Burning</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBurning()
   * @generated
   * @ordered
   */
  protected boolean burning = BURNING_EDEFAULT;

  /**
   * The default value of the '{@link #isNormal() <em>Normal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNormal()
   * @generated
   * @ordered
   */
  protected static final boolean NORMAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNormal() <em>Normal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNormal()
   * @generated
   * @ordered
   */
  protected boolean normal = NORMAL_EDEFAULT;

  /**
   * The default value of the '{@link #getLocatable() <em>Locatable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocatable()
   * @generated
   * @ordered
   */
  protected static final Locatable LOCATABLE_EDEFAULT = Locatable.CELL;

  /**
   * The cached value of the '{@link #getLocatable() <em>Locatable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocatable()
   * @generated
   * @ordered
   */
  protected Locatable locatable = LOCATABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FindImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BreactPackage.Literals.FIND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isGlobal()
  {
    return global;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGlobal(boolean newGlobal)
  {
    boolean oldGlobal = global;
    global = newGlobal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__GLOBAL, oldGlobal, global));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Distance getDistance()
  {
    return distance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDistance(Distance newDistance)
  {
    Distance oldDistance = distance;
    distance = newDistance == null ? DISTANCE_EDEFAULT : newDistance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__DISTANCE, oldDistance, distance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFrom()
  {
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFrom(boolean newFrom)
  {
    boolean oldFrom = from;
    from = newFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__FROM, oldFrom, from));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isBurning()
  {
    return burning;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBurning(boolean newBurning)
  {
    boolean oldBurning = burning;
    burning = newBurning;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__BURNING, oldBurning, burning));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNormal()
  {
    return normal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNormal(boolean newNormal)
  {
    boolean oldNormal = normal;
    normal = newNormal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__NORMAL, oldNormal, normal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Locatable getLocatable()
  {
    return locatable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLocatable(Locatable newLocatable)
  {
    Locatable oldLocatable = locatable;
    locatable = newLocatable == null ? LOCATABLE_EDEFAULT : newLocatable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BreactPackage.FIND__LOCATABLE, oldLocatable, locatable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BreactPackage.FIND__GLOBAL:
        return isGlobal();
      case BreactPackage.FIND__DISTANCE:
        return getDistance();
      case BreactPackage.FIND__FROM:
        return isFrom();
      case BreactPackage.FIND__BURNING:
        return isBurning();
      case BreactPackage.FIND__NORMAL:
        return isNormal();
      case BreactPackage.FIND__LOCATABLE:
        return getLocatable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BreactPackage.FIND__GLOBAL:
        setGlobal((Boolean)newValue);
        return;
      case BreactPackage.FIND__DISTANCE:
        setDistance((Distance)newValue);
        return;
      case BreactPackage.FIND__FROM:
        setFrom((Boolean)newValue);
        return;
      case BreactPackage.FIND__BURNING:
        setBurning((Boolean)newValue);
        return;
      case BreactPackage.FIND__NORMAL:
        setNormal((Boolean)newValue);
        return;
      case BreactPackage.FIND__LOCATABLE:
        setLocatable((Locatable)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BreactPackage.FIND__GLOBAL:
        setGlobal(GLOBAL_EDEFAULT);
        return;
      case BreactPackage.FIND__DISTANCE:
        setDistance(DISTANCE_EDEFAULT);
        return;
      case BreactPackage.FIND__FROM:
        setFrom(FROM_EDEFAULT);
        return;
      case BreactPackage.FIND__BURNING:
        setBurning(BURNING_EDEFAULT);
        return;
      case BreactPackage.FIND__NORMAL:
        setNormal(NORMAL_EDEFAULT);
        return;
      case BreactPackage.FIND__LOCATABLE:
        setLocatable(LOCATABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BreactPackage.FIND__GLOBAL:
        return global != GLOBAL_EDEFAULT;
      case BreactPackage.FIND__DISTANCE:
        return distance != DISTANCE_EDEFAULT;
      case BreactPackage.FIND__FROM:
        return from != FROM_EDEFAULT;
      case BreactPackage.FIND__BURNING:
        return burning != BURNING_EDEFAULT;
      case BreactPackage.FIND__NORMAL:
        return normal != NORMAL_EDEFAULT;
      case BreactPackage.FIND__LOCATABLE:
        return locatable != LOCATABLE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (global: ");
    result.append(global);
    result.append(", distance: ");
    result.append(distance);
    result.append(", from: ");
    result.append(from);
    result.append(", burning: ");
    result.append(burning);
    result.append(", normal: ");
    result.append(normal);
    result.append(", locatable: ");
    result.append(locatable);
    result.append(')');
    return result.toString();
  }

} //FindImpl
