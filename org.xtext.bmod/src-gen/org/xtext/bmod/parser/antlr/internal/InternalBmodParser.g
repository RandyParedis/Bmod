/*
 * generated by Xtext 2.16.0
 */
parser grammar InternalBmodParser;

options {
	tokenVocab=InternalBmodLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.xtext.bmod.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.bmod.services.BmodGrammarAccess;

}

@members {

 	private BmodGrammarAccess grammarAccess;

    public InternalBmodParser(TokenStream input, BmodGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BmodGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getModelAccess().getFloorplanParserRuleCall());
	}
	this_Floorplan_0=ruleFloorplan
	{
		$current = $this_Floorplan_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFloorplan
entryRuleFloorplan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloorplanRule()); }
	iv_ruleFloorplan=ruleFloorplan
	{ $current=$iv_ruleFloorplan.current; }
	EOF;

// Rule Floorplan
ruleFloorplan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFloorplanAccess().getFloorplanAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFloorplanAccess().getImportsImportParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloorplanRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"org.xtext.bmod.Bmod.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getRoomsRoomParserRuleCall_2_0_0());
					}
					lv_rooms_2_0=ruleRoom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"rooms",
							lv_rooms_2_0,
							"org.xtext.bmod.Bmod.Room");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getDoorsDoorParserRuleCall_2_1_0());
					}
					lv_doors_3_0=ruleDoor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"doors",
							lv_doors_3_0,
							"org.xtext.bmod.Bmod.Door");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getPersonsPersonParserRuleCall_2_2_0());
					}
					lv_persons_4_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"persons",
							lv_persons_4_0,
							"org.xtext.bmod.Bmod.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getExitsExitParserRuleCall_2_3_0());
					}
					lv_exits_5_0=ruleExit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"exits",
							lv_exits_5_0,
							"org.xtext.bmod.Bmod.Exit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getFiresFireParserRuleCall_2_4_0());
					}
					lv_fires_6_0=ruleFire
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"fires",
							lv_fires_6_0,
							"org.xtext.bmod.Bmod.Fire");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFloorplanAccess().getSignsEmergencySignParserRuleCall_2_5_0());
					}
					lv_signs_7_0=ruleEmergencySign
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloorplanRule());
						}
						add(
							$current,
							"signs",
							lv_signs_7_0,
							"org.xtext.bmod.Bmod.EmergencySign");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Import
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Room
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomAccess().getRoomKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_VARNAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRoomAccess().getNameVARNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.bmod.Bmod.VARNAME");
				}
			)
		)
		(
			(
				(
					lv_hasCapacity_2_0=LeftSquareBracket
					{
						newLeafNode(lv_hasCapacity_2_0, grammarAccess.getRoomAccess().getHasCapacityLeftSquareBracketKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoomRule());
						}
						setWithLastConsumed($current, "hasCapacity", true, "[");
					}
				)
			)
			(
				(
					lv_capacity_3_0=RULE_INT
					{
						newLeafNode(lv_capacity_3_0, grammarAccess.getRoomAccess().getCapacityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoomRule());
						}
						setWithLastConsumed(
							$current,
							"capacity",
							lv_capacity_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=RightSquareBracket
			{
				newLeafNode(otherlv_4, grammarAccess.getRoomAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_3_0());
				}
				lv_areas_5_0=ruleArea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					add(
						$current,
						"areas",
						lv_areas_5_0,
						"org.xtext.bmod.Bmod.Area");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=And
			{
				newLeafNode(otherlv_6, grammarAccess.getRoomAccess().getAndKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_4_1_0());
					}
					lv_areas_7_0=ruleArea
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoomRule());
						}
						add(
							$current,
							"areas",
							lv_areas_7_0,
							"org.xtext.bmod.Bmod.Area");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDoor
entryRuleDoor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoorRule()); }
	iv_ruleDoor=ruleDoor
	{ $current=$iv_ruleDoor.current; }
	EOF;

// Rule Door
ruleDoor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Door
		{
			newLeafNode(otherlv_0, grammarAccess.getDoorAccess().getDoorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_VARNAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDoorAccess().getNameVARNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.bmod.Bmod.VARNAME");
				}
			)
		)
		otherlv_2=From
		{
			newLeafNode(otherlv_2, grammarAccess.getDoorAccess().getFromKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoorAccess().getFromCoordinateParserRuleCall_3_0());
				}
				lv_from_3_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoorRule());
					}
					set(
						$current,
						"from",
						lv_from_3_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=To
		{
			newLeafNode(otherlv_4, grammarAccess.getDoorAccess().getToKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoorAccess().getToCoordinateParserRuleCall_5_0());
				}
				lv_to_5_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoorRule());
					}
					set(
						$current,
						"to",
						lv_to_5_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Person
		{
			newLeafNode(otherlv_0, grammarAccess.getPersonAccess().getPersonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_VARNAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPersonAccess().getNameVARNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.bmod.Bmod.VARNAME");
				}
			)
		)
		otherlv_2=In
		{
			newLeafNode(otherlv_2, grammarAccess.getPersonAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonAccess().getLocationCoordinateParserRuleCall_3_0());
				}
				lv_location_3_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonRule());
					}
					set(
						$current,
						"location",
						lv_location_3_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=Colon
		{
			newLeafNode(otherlv_4, grammarAccess.getPersonAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersonRule());
					}
				}
				otherlv_5=RULE_VARNAME
				{
					newLeafNode(otherlv_5, grammarAccess.getPersonAccess().getActionActionDescCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExit
entryRuleExit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExitRule()); }
	iv_ruleExit=ruleExit
	{ $current=$iv_ruleExit.current; }
	EOF;

// Rule Exit
ruleExit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Exit
		{
			newLeafNode(otherlv_0, grammarAccess.getExitAccess().getExitKeyword_0());
		}
		otherlv_1=In
		{
			newLeafNode(otherlv_1, grammarAccess.getExitAccess().getInKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExitAccess().getLocationCoordinateParserRuleCall_2_0());
				}
				lv_location_2_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExitRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFire
entryRuleFire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFireRule()); }
	iv_ruleFire=ruleFire
	{ $current=$iv_ruleFire.current; }
	EOF;

// Rule Fire
ruleFire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Fire
		{
			newLeafNode(otherlv_0, grammarAccess.getFireAccess().getFireKeyword_0());
		}
		otherlv_1=In
		{
			newLeafNode(otherlv_1, grammarAccess.getFireAccess().getInKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFireAccess().getLocationCoordinateParserRuleCall_2_0());
				}
				lv_location_2_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFireRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEmergencySign
entryRuleEmergencySign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmergencySignRule()); }
	iv_ruleEmergencySign=ruleEmergencySign
	{ $current=$iv_ruleEmergencySign.current; }
	EOF;

// Rule EmergencySign
ruleEmergencySign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=EmergencySign
		{
			newLeafNode(otherlv_0, grammarAccess.getEmergencySignAccess().getEmergencySignKeyword_0());
		}
		otherlv_1=From
		{
			newLeafNode(otherlv_1, grammarAccess.getEmergencySignAccess().getFromKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmergencySignRule());
					}
				}
				otherlv_2=RULE_VARNAME
				{
					newLeafNode(otherlv_2, grammarAccess.getEmergencySignAccess().getFromDoorCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEmergencySignAccess().getRefDoorRefParserRuleCall_3_0());
				}
				lv_ref_3_0=ruleDoorRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmergencySignRule());
					}
					set(
						$current,
						"ref",
						lv_ref_3_0,
						"org.xtext.bmod.Bmod.DoorRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoorRef
entryRuleDoorRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoorRefRule()); }
	iv_ruleDoorRef=ruleDoorRef
	{ $current=$iv_ruleDoorRef.current; }
	EOF;

// Rule DoorRef
ruleDoorRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=To
		{
			newLeafNode(otherlv_0, grammarAccess.getDoorRefAccess().getToKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoorRefRule());
					}
				}
				otherlv_1=RULE_VARNAME
				{
					newLeafNode(otherlv_1, grammarAccess.getDoorRefAccess().getToDoorCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCoordinate
entryRuleCoordinate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoordinateRule()); }
	iv_ruleCoordinate=ruleCoordinate
	{ $current=$iv_ruleCoordinate.current; }
	EOF;

// Rule Coordinate
ruleCoordinate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_x_1_0=RULE_INT
				{
					newLeafNode(lv_x_1_0, grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoordinateRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=Comma
		{
			newLeafNode(otherlv_2, grammarAccess.getCoordinateAccess().getCommaKeyword_2());
		}
		(
			(
				lv_y_3_0=RULE_INT
				{
					newLeafNode(lv_y_3_0, grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoordinateRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleArea
entryRuleArea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAreaRule()); }
	iv_ruleArea=ruleArea
	{ $current=$iv_ruleArea.current; }
	EOF;

// Rule Area
ruleArea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=From
		{
			newLeafNode(otherlv_0, grammarAccess.getAreaAccess().getFromKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAreaAccess().getFromCoordinateParserRuleCall_1_0());
				}
				lv_from_1_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAreaRule());
					}
					set(
						$current,
						"from",
						lv_from_1_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=To
		{
			newLeafNode(otherlv_2, grammarAccess.getAreaAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAreaAccess().getToCoordinateParserRuleCall_3_0());
				}
				lv_to_3_0=ruleCoordinate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAreaRule());
					}
					set(
						$current,
						"to",
						lv_to_3_0,
						"org.xtext.bmod.Bmod.Coordinate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=Without
			{
				newLeafNode(otherlv_4, grammarAccess.getAreaAccess().getWithoutKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_1_0());
					}
					lv_without_5_0=ruleCoordinate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAreaRule());
						}
						add(
							$current,
							"without",
							lv_without_5_0,
							"org.xtext.bmod.Bmod.Coordinate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=Comma
				{
					newLeafNode(otherlv_6, grammarAccess.getAreaAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_2_1_0());
						}
						lv_without_7_0=ruleCoordinate
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAreaRule());
							}
							add(
								$current,
								"without",
								lv_without_7_0,
								"org.xtext.bmod.Bmod.Coordinate");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;
