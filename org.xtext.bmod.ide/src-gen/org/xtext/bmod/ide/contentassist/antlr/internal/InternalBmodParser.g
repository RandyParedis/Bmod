/*
 * generated by Xtext 2.16.0
 */
parser grammar InternalBmodParser;

options {
	tokenVocab=InternalBmodLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.bmod.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.bmod.services.BmodGrammarAccess;

}
@members {
	private BmodGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Door", "'Door'");
		tokenNameToValue.put("Exit", "'Exit'");
		tokenNameToValue.put("Fire", "'Fire'");
		tokenNameToValue.put("Room", "'Room'");
		tokenNameToValue.put("From", "'from'");
		tokenNameToValue.put("Person", "'Person'");
		tokenNameToValue.put("Import", "'import'");
		tokenNameToValue.put("Without", "'without'");
		tokenNameToValue.put("EmergencySign", "'EmergencySign'");
	}

	public void setGrammarAccess(BmodGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getFloorplanParserRuleCall()); }
		ruleFloorplan
		{ after(grammarAccess.getModelAccess().getFloorplanParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloorplan
entryRuleFloorplan
:
{ before(grammarAccess.getFloorplanRule()); }
	 ruleFloorplan
{ after(grammarAccess.getFloorplanRule()); } 
	 EOF 
;

// Rule Floorplan
ruleFloorplan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloorplanAccess().getGroup()); }
		(rule__Floorplan__Group__0)
		{ after(grammarAccess.getFloorplanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoom
entryRuleRoom
:
{ before(grammarAccess.getRoomRule()); }
	 ruleRoom
{ after(grammarAccess.getRoomRule()); } 
	 EOF 
;

// Rule Room
ruleRoom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomAccess().getGroup()); }
		(rule__Room__Group__0)
		{ after(grammarAccess.getRoomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoor
entryRuleDoor
:
{ before(grammarAccess.getDoorRule()); }
	 ruleDoor
{ after(grammarAccess.getDoorRule()); } 
	 EOF 
;

// Rule Door
ruleDoor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoorAccess().getGroup()); }
		(rule__Door__Group__0)
		{ after(grammarAccess.getDoorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerson
entryRulePerson
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonAccess().getGroup()); }
		(rule__Person__Group__0)
		{ after(grammarAccess.getPersonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExit
entryRuleExit
:
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitAccess().getGroup()); }
		(rule__Exit__Group__0)
		{ after(grammarAccess.getExitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFire
entryRuleFire
:
{ before(grammarAccess.getFireRule()); }
	 ruleFire
{ after(grammarAccess.getFireRule()); } 
	 EOF 
;

// Rule Fire
ruleFire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFireAccess().getGroup()); }
		(rule__Fire__Group__0)
		{ after(grammarAccess.getFireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmergencySign
entryRuleEmergencySign
:
{ before(grammarAccess.getEmergencySignRule()); }
	 ruleEmergencySign
{ after(grammarAccess.getEmergencySignRule()); } 
	 EOF 
;

// Rule EmergencySign
ruleEmergencySign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmergencySignAccess().getGroup()); }
		(rule__EmergencySign__Group__0)
		{ after(grammarAccess.getEmergencySignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoorRef
entryRuleDoorRef
:
{ before(grammarAccess.getDoorRefRule()); }
	 ruleDoorRef
{ after(grammarAccess.getDoorRefRule()); } 
	 EOF 
;

// Rule DoorRef
ruleDoorRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoorRefAccess().getGroup()); }
		(rule__DoorRef__Group__0)
		{ after(grammarAccess.getDoorRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate
entryRuleCoordinate
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateAccess().getGroup()); }
		(rule__Coordinate__Group__0)
		{ after(grammarAccess.getCoordinateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArea
entryRuleArea
:
{ before(grammarAccess.getAreaRule()); }
	 ruleArea
{ after(grammarAccess.getAreaRule()); } 
	 EOF 
;

// Rule Area
ruleArea 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAreaAccess().getGroup()); }
		(rule__Area__Group__0)
		{ after(grammarAccess.getAreaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getRoomsAssignment_2_0()); }
		(rule__Floorplan__RoomsAssignment_2_0)
		{ after(grammarAccess.getFloorplanAccess().getRoomsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloorplanAccess().getDoorsAssignment_2_1()); }
		(rule__Floorplan__DoorsAssignment_2_1)
		{ after(grammarAccess.getFloorplanAccess().getDoorsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloorplanAccess().getPersonsAssignment_2_2()); }
		(rule__Floorplan__PersonsAssignment_2_2)
		{ after(grammarAccess.getFloorplanAccess().getPersonsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getFloorplanAccess().getExitsAssignment_2_3()); }
		(rule__Floorplan__ExitsAssignment_2_3)
		{ after(grammarAccess.getFloorplanAccess().getExitsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getFloorplanAccess().getFiresAssignment_2_4()); }
		(rule__Floorplan__FiresAssignment_2_4)
		{ after(grammarAccess.getFloorplanAccess().getFiresAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getFloorplanAccess().getSignsAssignment_2_5()); }
		(rule__Floorplan__SignsAssignment_2_5)
		{ after(grammarAccess.getFloorplanAccess().getSignsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Floorplan__Group__0__Impl
	rule__Floorplan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloorplanAccess().getFloorplanAction_0()); }
	()
	{ after(grammarAccess.getFloorplanAccess().getFloorplanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Floorplan__Group__1__Impl
	rule__Floorplan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloorplanAccess().getImportsAssignment_1()); }
	(rule__Floorplan__ImportsAssignment_1)*
	{ after(grammarAccess.getFloorplanAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Floorplan__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloorplanAccess().getAlternatives_2()); }
	(rule__Floorplan__Alternatives_2)*
	{ after(grammarAccess.getFloorplanAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	Import
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__0__Impl
	rule__Room__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
	Room
	{ after(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__1__Impl
	rule__Room__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getNameAssignment_1()); }
	(rule__Room__NameAssignment_1)
	{ after(grammarAccess.getRoomAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__2__Impl
	rule__Room__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getGroup_2()); }
	(rule__Room__Group_2__0)?
	{ after(grammarAccess.getRoomAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__3__Impl
	rule__Room__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getAreasAssignment_3()); }
	(rule__Room__AreasAssignment_3)
	{ after(grammarAccess.getRoomAccess().getAreasAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getGroup_4()); }
	(rule__Room__Group_4__0)*
	{ after(grammarAccess.getRoomAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_2__0__Impl
	rule__Room__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getHasCapacityAssignment_2_0()); }
	(rule__Room__HasCapacityAssignment_2_0)
	{ after(grammarAccess.getRoomAccess().getHasCapacityAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_2__1__Impl
	rule__Room__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getCapacityAssignment_2_1()); }
	(rule__Room__CapacityAssignment_2_1)
	{ after(grammarAccess.getRoomAccess().getCapacityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRightSquareBracketKeyword_2_2()); }
	RightSquareBracket
	{ after(grammarAccess.getRoomAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__0__Impl
	rule__Room__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getAndKeyword_4_0()); }
	And
	{ after(grammarAccess.getRoomAccess().getAndKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getAreasAssignment_4_1()); }
	(rule__Room__AreasAssignment_4_1)
	{ after(grammarAccess.getRoomAccess().getAreasAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Door__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__0__Impl
	rule__Door__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getDoorKeyword_0()); }
	Door
	{ after(grammarAccess.getDoorAccess().getDoorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__1__Impl
	rule__Door__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getNameAssignment_1()); }
	(rule__Door__NameAssignment_1)
	{ after(grammarAccess.getDoorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__2__Impl
	rule__Door__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getFromKeyword_2()); }
	From
	{ after(grammarAccess.getDoorAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__3__Impl
	rule__Door__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getFromAssignment_3()); }
	(rule__Door__FromAssignment_3)
	{ after(grammarAccess.getDoorAccess().getFromAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__4__Impl
	rule__Door__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getToKeyword_4()); }
	To
	{ after(grammarAccess.getDoorAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Door__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorAccess().getToAssignment_5()); }
	(rule__Door__ToAssignment_5)
	{ after(grammarAccess.getDoorAccess().getToAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__0__Impl
	rule__Person__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
	Person
	{ after(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__1__Impl
	rule__Person__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getNameAssignment_1()); }
	(rule__Person__NameAssignment_1)
	{ after(grammarAccess.getPersonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__2__Impl
	rule__Person__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getInKeyword_2()); }
	In
	{ after(grammarAccess.getPersonAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__3__Impl
	rule__Person__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getLocationAssignment_3()); }
	(rule__Person__LocationAssignment_3)
	{ after(grammarAccess.getPersonAccess().getLocationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__4__Impl
	rule__Person__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getColonKeyword_4()); }
	Colon
	{ after(grammarAccess.getPersonAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getActionAssignment_5()); }
	(rule__Person__ActionAssignment_5)
	{ after(grammarAccess.getPersonAccess().getActionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__0__Impl
	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getExitKeyword_0()); }
	Exit
	{ after(grammarAccess.getExitAccess().getExitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__1__Impl
	rule__Exit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getInKeyword_1()); }
	In
	{ after(grammarAccess.getExitAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getLocationAssignment_2()); }
	(rule__Exit__LocationAssignment_2)
	{ after(grammarAccess.getExitAccess().getLocationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fire__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fire__Group__0__Impl
	rule__Fire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFireAccess().getFireKeyword_0()); }
	Fire
	{ after(grammarAccess.getFireAccess().getFireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fire__Group__1__Impl
	rule__Fire__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFireAccess().getInKeyword_1()); }
	In
	{ after(grammarAccess.getFireAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fire__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFireAccess().getLocationAssignment_2()); }
	(rule__Fire__LocationAssignment_2)
	{ after(grammarAccess.getFireAccess().getLocationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmergencySign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmergencySign__Group__0__Impl
	rule__EmergencySign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmergencySignAccess().getEmergencySignKeyword_0()); }
	EmergencySign
	{ after(grammarAccess.getEmergencySignAccess().getEmergencySignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmergencySign__Group__1__Impl
	rule__EmergencySign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmergencySignAccess().getFromKeyword_1()); }
	From
	{ after(grammarAccess.getEmergencySignAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmergencySign__Group__2__Impl
	rule__EmergencySign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmergencySignAccess().getFromAssignment_2()); }
	(rule__EmergencySign__FromAssignment_2)
	{ after(grammarAccess.getEmergencySignAccess().getFromAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmergencySign__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmergencySignAccess().getRefAssignment_3()); }
	(rule__EmergencySign__RefAssignment_3)
	{ after(grammarAccess.getEmergencySignAccess().getRefAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoorRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoorRef__Group__0__Impl
	rule__DoorRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorRefAccess().getToKeyword_0()); }
	To
	{ after(grammarAccess.getDoorRefAccess().getToKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoorRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoorRefAccess().getToAssignment_1()); }
	(rule__DoorRef__ToAssignment_1)
	{ after(grammarAccess.getDoorRefAccess().getToAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__0__Impl
	rule__Coordinate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__1__Impl
	rule__Coordinate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getXAssignment_1()); }
	(rule__Coordinate__XAssignment_1)
	{ after(grammarAccess.getCoordinateAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__2__Impl
	rule__Coordinate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getCommaKeyword_2()); }
	Comma
	{ after(grammarAccess.getCoordinateAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__3__Impl
	rule__Coordinate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getYAssignment_3()); }
	(rule__Coordinate__YAssignment_3)
	{ after(grammarAccess.getCoordinateAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Area__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group__0__Impl
	rule__Area__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getFromKeyword_0()); }
	From
	{ after(grammarAccess.getAreaAccess().getFromKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group__1__Impl
	rule__Area__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getFromAssignment_1()); }
	(rule__Area__FromAssignment_1)
	{ after(grammarAccess.getAreaAccess().getFromAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group__2__Impl
	rule__Area__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getToKeyword_2()); }
	To
	{ after(grammarAccess.getAreaAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group__3__Impl
	rule__Area__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getToAssignment_3()); }
	(rule__Area__ToAssignment_3)
	{ after(grammarAccess.getAreaAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getGroup_4()); }
	(rule__Area__Group_4__0)?
	{ after(grammarAccess.getAreaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Area__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group_4__0__Impl
	rule__Area__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getWithoutKeyword_4_0()); }
	Without
	{ after(grammarAccess.getAreaAccess().getWithoutKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group_4__1__Impl
	rule__Area__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getWithoutAssignment_4_1()); }
	(rule__Area__WithoutAssignment_4_1)
	{ after(grammarAccess.getAreaAccess().getWithoutAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getGroup_4_2()); }
	(rule__Area__Group_4_2__0)*
	{ after(grammarAccess.getAreaAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Area__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group_4_2__0__Impl
	rule__Area__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getCommaKeyword_4_2_0()); }
	Comma
	{ after(grammarAccess.getAreaAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Area__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaAccess().getWithoutAssignment_4_2_1()); }
	(rule__Area__WithoutAssignment_4_2_1)
	{ after(grammarAccess.getAreaAccess().getWithoutAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Floorplan__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getFloorplanAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__RoomsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getRoomsRoomParserRuleCall_2_0_0()); }
		ruleRoom
		{ after(grammarAccess.getFloorplanAccess().getRoomsRoomParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__DoorsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getDoorsDoorParserRuleCall_2_1_0()); }
		ruleDoor
		{ after(grammarAccess.getFloorplanAccess().getDoorsDoorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__PersonsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getPersonsPersonParserRuleCall_2_2_0()); }
		rulePerson
		{ after(grammarAccess.getFloorplanAccess().getPersonsPersonParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__ExitsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getExitsExitParserRuleCall_2_3_0()); }
		ruleExit
		{ after(grammarAccess.getFloorplanAccess().getExitsExitParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__FiresAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getFiresFireParserRuleCall_2_4_0()); }
		ruleFire
		{ after(grammarAccess.getFloorplanAccess().getFiresFireParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Floorplan__SignsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloorplanAccess().getSignsEmergencySignParserRuleCall_2_5_0()); }
		ruleEmergencySign
		{ after(grammarAccess.getFloorplanAccess().getSignsEmergencySignParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getNameVARNAMETerminalRuleCall_1_0()); }
		RULE_VARNAME
		{ after(grammarAccess.getRoomAccess().getNameVARNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__HasCapacityAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getHasCapacityLeftSquareBracketKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getRoomAccess().getHasCapacityLeftSquareBracketKeyword_2_0_0()); }
			LeftSquareBracket
			{ after(grammarAccess.getRoomAccess().getHasCapacityLeftSquareBracketKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getRoomAccess().getHasCapacityLeftSquareBracketKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__CapacityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getCapacityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRoomAccess().getCapacityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__AreasAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_3_0()); }
		ruleArea
		{ after(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__AreasAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_4_1_0()); }
		ruleArea
		{ after(grammarAccess.getRoomAccess().getAreasAreaParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoorAccess().getNameVARNAMETerminalRuleCall_1_0()); }
		RULE_VARNAME
		{ after(grammarAccess.getDoorAccess().getNameVARNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__FromAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoorAccess().getFromCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getDoorAccess().getFromCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Door__ToAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoorAccess().getToCoordinateParserRuleCall_5_0()); }
		ruleCoordinate
		{ after(grammarAccess.getDoorAccess().getToCoordinateParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getNameVARNAMETerminalRuleCall_1_0()); }
		RULE_VARNAME
		{ after(grammarAccess.getPersonAccess().getNameVARNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__LocationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getLocationCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getPersonAccess().getLocationCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__ActionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getActionActionDescCrossReference_5_0()); }
		(
			{ before(grammarAccess.getPersonAccess().getActionActionDescVARNAMETerminalRuleCall_5_0_1()); }
			RULE_VARNAME
			{ after(grammarAccess.getPersonAccess().getActionActionDescVARNAMETerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getPersonAccess().getActionActionDescCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__LocationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitAccess().getLocationCoordinateParserRuleCall_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getExitAccess().getLocationCoordinateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fire__LocationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFireAccess().getLocationCoordinateParserRuleCall_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getFireAccess().getLocationCoordinateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__FromAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmergencySignAccess().getFromDoorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getEmergencySignAccess().getFromDoorVARNAMETerminalRuleCall_2_0_1()); }
			RULE_VARNAME
			{ after(grammarAccess.getEmergencySignAccess().getFromDoorVARNAMETerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getEmergencySignAccess().getFromDoorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmergencySign__RefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmergencySignAccess().getRefDoorRefParserRuleCall_3_0()); }
		ruleDoorRef
		{ after(grammarAccess.getEmergencySignAccess().getRefDoorRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoorRef__ToAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoorRefAccess().getToDoorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDoorRefAccess().getToDoorVARNAMETerminalRuleCall_1_0_1()); }
			RULE_VARNAME
			{ after(grammarAccess.getDoorRefAccess().getToDoorVARNAMETerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDoorRefAccess().getToDoorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__FromAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAreaAccess().getFromCoordinateParserRuleCall_1_0()); }
		ruleCoordinate
		{ after(grammarAccess.getAreaAccess().getFromCoordinateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAreaAccess().getToCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getAreaAccess().getToCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__WithoutAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_1_0()); }
		ruleCoordinate
		{ after(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Area__WithoutAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_2_1_0()); }
		ruleCoordinate
		{ after(grammarAccess.getAreaAccess().getWithoutCoordinateParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
